{% macro ParametersDecl parameters %}{% for parameter in parameters %}{{parameter.name}}: {{parameter.type}}{% if not forloop.last %}, {% endif %}{% endfor %}{% endmacro %}
{% macro ParametersDeclWithSeparator parameters %}{% if parameters %}, {% endif %}{% call ParametersDecl dependencyContainer.parameters %}{% endmacro %}

{% macro ParametersPassIn parameters %}{% for parameter in parameters %}{{parameter.name}}: {{parameter.name}}{% if not forloop.last %}, {% endif %}{% endfor %}{% endmacro %}
{% macro ParametersPassInWithSeparator parameters %}{% if parameters %}, {% endif %}{% call ParametersPassIn parameters %}{% endmacro %}

{% macro ParameterAssign parameters %}
        {% for parameter in parameters %}
        self.{{parameter.name}} = {{parameter.name}}
        {% endfor %}
{% endmacro %}

{% macro AttributesDecl dependencies %}
{% for dependency in dependencies %}
	{% if dependency.isSelfReference %}
	var {{dependency.name}}: {{dependency.abstractType}} {
		guard let value = _self else {
            {% if dependency.onFatalError %}
            {{dependency.onFatalError}}()
            {% else %}
			fatalError("_self was released too early.")
            {% endif %}
		}
		return value
	}
	{% else %}
    let {{dependency.name}}: {{dependency.abstractType}}
    {% endif %}
{% endfor %}
{% endmacro %}

{% macro DependencyResolverDecl dependencies %}
{% for dependency in dependencies %}

    {% if not dependency.customBuilder and dependency.parameters %}
    func {{dependency.name}}({% call ParametersDecl dependency.parameters %}) -> {{dependency.abstractType}}
    {% else %}
    var {{dependency.name}}: {{dependency.abstractType}} { get }
    {% endif %}

{% endfor %}
{% endmacro %}
