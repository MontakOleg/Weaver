import API
import Foundation
import UIKit

/// This file is generated by Weaver 0.12.4
/// DO NOT EDIT!

// MARK: - MovieViewController

protocol MovieViewControllerInputDependencyResolver: AnyObject {
    var movieManager: MovieManaging { get }
    var imageManager: ImageManaging { get }
    var reviewManager: ReviewManaging { get }
}

protocol MovieViewControllerDependencyResolver: AnyObject {
    var movieID: UInt { get }
    var title: String { get }
    var movieManager: MovieManaging { get }
    var imageManager: ImageManaging { get }
    var logger: Logger { get }
    func reviewController(movieID: UInt) -> WSReviewViewController
}

final class MovieViewControllerDependencyContainer: MovieViewControllerDependencyResolver, WSReviewViewControllerInputDependencyResolver {

    let movieID: UInt

    let title: String

    let movieManager: MovieManaging

    let imageManager: ImageManaging

    let reviewManager: ReviewManaging

    private var _logger: Optional<Logger> = nil
    var logger: Logger {
        if let value: Logger = _logger {
            return value
        }
        let value: Logger = Logger()
        _logger = value
        return value
    }

    private var _reviewController: Optional<WSReviewViewController> = nil
    func reviewController(movieID: UInt) -> WSReviewViewController {
        if let value: WSReviewViewController = _reviewController {
            return value
        }
        let dependencies = WSReviewViewControllerDependencyContainer(injecting: self, movieID: movieID)
        let value: WSReviewViewController = WSReviewViewController(injecting: dependencies)
        _reviewController = value
        return value
    }

    init(injecting dependencies: MovieViewControllerInputDependencyResolver,
         movieID: UInt,
         title: String) {
        self.movieID = movieID
        self.title = title
        movieManager = dependencies.movieManager
        imageManager = dependencies.imageManager
        reviewManager = dependencies.reviewManager
        _ = logger
        _ = reviewController(movieID: movieID)
    }
}
