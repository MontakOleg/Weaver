/// This file is generated by Weaver 0.12.4
/// DO NOT EDIT!

// MARK: - FooTest12

protocol FooTest12DependencyResolver: AnyObject {
    var fii: FiiTest12 { get }
}

final class FooTest12DependencyContainer: FooTest12DependencyResolver {

    private var _fii: Optional<FiiTest12> = nil
    var fii: FiiTest12 {
        if let value: FiiTest12 = _fii {
            return value
        }
        let value: FiiTest12 = FiiTest12()
        _fii = value
        return value
    }

    init() { _ = fii }
}

// MARK: - FuuTest12

protocol FuuTest12DependencyResolver: AnyObject {
    var foo: FooTest12 { get }
}

final class FuuTest12DependencyContainer: FuuTest12DependencyResolver {

    private var _foo: Optional<FooTest12> = nil
    var foo: FooTest12 {
        if let value: FooTest12 = _foo {
            return value
        }
        let value: FooTest12 = FooTest12(injecting: FooTest12DependencyContainer())
        _foo = value
        return value
    }

    init() { _ = foo }
}

